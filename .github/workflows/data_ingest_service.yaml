name: CI-CD - data_ingest_service

on:
  push:
      branches:
        - main
      paths:
        - "services/data_ingest_service/**"
        - ".github/workflows/data_ingest_service.yaml"
        - "dvc.yaml"
  pull_request:
    paths:  
      - "services/data_ingest_service/**"
  workflow_dispatch: 
  
env:
  SERVICE_NAME: data_ingest_service
  DOCKER_IMAGE: ghcr.io/minhtran/data_ingest_service:v1
  PYTHON_VERSION: '3.10'

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r services/${{ env.SERVICE_NAME }}/requirements.txt
          pip install pytest

      - name: Configure DVC remote with connection string
        run: |
          dvc remote modify azure_tmp connection_string "${AZURE_STORAGE_CONNECTION_STRING}" --local

      - name: Check DVC remote
        run: dvc remote list -v
        
      - name: Check dvc.lock
        run: cat dvc.lock

      - name: Pull data from DVC 
        run: |
          dvc pull -r azure_tmp ingest
      
      - name: Run tests
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)/services/data_ingest_service
          pytest services/${{ env.SERVICE_NAME }}/tests --maxfail=1 --disable-warnings -q

      - name: Validate DVC pipeline
        run: |
          dvc status ingest
          dvc repro --dry ingest


  cd: 
    runs-on: ubuntu-latest 
    needs: ci 
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v2  

      - name: Login to github container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure DVC remote with connection string
        run: | 
          dvc remote modify azure_tmp connection_string "${AZURE_STORAGE_CONNECTION_STRING}" --local

      - name: Pull data from DVC (for Docker build)
        run: |
          dvc pull -r azure_tmp ingest

      - name: Build and push Docker image  
        run: |
          docker build -t ${{ env.DOCKER_IMAGE }}:v1 services/${{ env.SERVICE_NAME }}
          docker push ${{ env.DOCKER_IMAGE }}:v1
        
      - name: Deploy to Kubernetes
        uses: azure/k8s-deploy@v4
        with:
          manifests: |
            k8s/${{ env.SERVICE_NAME }}/deployment.yaml
            k8s/${{ env.SERVICE_NAME }}/service.yaml
          images: |
            ${{ env.DOCKER_IMAGE }}:v1
          namespace: default
          kubectl-version: 'latest' 
